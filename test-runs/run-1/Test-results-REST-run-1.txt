POST http://localhost:3000/registries

Response
{
"ID": "63451f8cb9d6140a1893df79"
}

----------------------------------------------------

GET http://localhost:3000/registries/63451f8cb9d6140a1893df79

{"contractName":"Runtime Registry","abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"processAddress\",\"type\":\"address\"}],\"name\":\"NewInstanceCreatedFor\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentBundleId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"processBundleId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"}],\"name\":\"addChildBundleId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allInstances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allRegisteredIFlows\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allRegisteredModels\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"procInstance\",\"type\":\"address\"}],\"name\":\"bindingPolicyFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"procId\",\"type\":\"bytes32\"}],\"name\":\"bindingPolicyFromId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"processInstance\",\"type\":\"address\"}],\"name\":\"bundleFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nodeInd\",\"type\":\"uint256\"}],\"name\":\"childrenFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"findRuntimePolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"}],\"name\":\"getBundleIdFromIFlow\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iDataAddr\",\"type\":\"address\"}],\"name\":\"getIFlowFromIData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"hasFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"newBundleInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"newInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessCtrl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trMap\",\"type\":\"address\"}],\"name\":\"newRestrictedCInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iFlowAdr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessCtrl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trMap\",\"type\":\"address\"}],\"name\":\"newRestrictedIInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessControlAdr\",\"type\":\"address\"}],\"name\":\"registerAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"registerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iDataAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"policyOpAddr\",\"type\":\"address\"}],\"name\":\"registerIData2IflowRelation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"}],\"name\":\"registerIFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"worklist\",\"type\":\"address\"}],\"name\":\"registerWorklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_policy\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_taskRole\",\"type\":\"bytes32\"}],\"name\":\"relateProcessToPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"processInstance\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"elementIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decission\",\"type\":\"uint256\"}],\"name\":\"resumeInstanceFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"procInstance\",\"type\":\"address\"}],\"name\":\"taskRoleMapFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"procId\",\"type\":\"bytes32\"}],\"name\":\"taskRoleMapFromId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"worklist\",\"type\":\"address\"}],\"name\":\"worklistBundleFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bytecode":"","solidityCode":"pragma solidity >= 0.4.25 < 0.7.0;\r\n\r\nabstract contract IFunct {\r\n    // WorkList functions\r\n    function updateRuntimeRegistry(address _runtimeRegistry) public virtual;\r\n    // Factory Functions\r\n    function setWorklist(address _worklist) public virtual;\r\n    function startInstanceExecution(address processAddress) public virtual;\r\n    function newInstance(address parent, address globalFactory) public virtual returns(address);\r\n    function findParent() public virtual view returns(address);\r\n    function resumeInstance(uint elementIndex, uint decission) public virtual;\r\n    function registerAgreement(address agreementAddr, address accessControlAdr) public virtual;\r\n    function linkPolicyToAccessControl(address pCase, address _registry, address _policy, address _taskRoleAdr) public virtual;   \r\n    function createInstance(address cFlow) public virtual returns(address);\r\n}\r\n\r\ncontract RuntimeRegistry {\r\n\r\n    mapping (bytes32 => mapping (uint => bytes32)) private parent2ChildrenBundleId;\r\n    mapping (bytes32 => address) private factories;\r\n    mapping (address => bytes32) private iFlow;\r\n    \r\n    mapping (bytes32 => bytes32) private policy;\r\n    mapping (bytes32 => bytes32) private taskRole;\r\n\r\n    mapping (address => bytes32) private instance2Bundle;\r\n    mapping (address => address) private iData2IFlow;\r\n    mapping (address => address) private instance2PolicyOp;\r\n    mapping (address => address) private agreement2Policy;\r\n    \r\n    address[] private instancesCE;\r\n    \r\n    bytes32[] private repoIdsCE;\r\n    bytes32[] private repoIdsIE;\r\n    \r\n\r\n    mapping (address => bytes32) private worklist2Bundle;\r\n\r\n    event NewInstanceCreatedFor(address parent, address processAddress);\r\n    \r\n    function registerIFlow(bytes32 bundleId, address iFlowAddr) external {\r\n        iFlow[iFlowAddr] = bundleId;\r\n        repoIdsIE.push(bundleId);\r\n    }\r\n\r\n    function registerIData2IflowRelation(address iDataAddr, address iFlowAddr, address policyOpAddr) public {\r\n        iData2IFlow[iDataAddr] = iFlowAddr;\r\n        instance2PolicyOp[iDataAddr] = policyOpAddr;\r\n    }\r\n\r\n    function getIFlowFromIData(address iDataAddr) external view returns(address) {\r\n        return iData2IFlow[iDataAddr];\r\n    }\r\n\r\n    function getBundleIdFromIFlow (address iFlowAddr) external view returns(bytes32) {\r\n        return iFlow[iFlowAddr];\r\n    }\r\n    \r\n    function registerFactory(bytes32 bundleId, address factory) external {\r\n        factories[bundleId] = factory;\r\n        repoIdsCE.push(bundleId);\r\n    }\r\n\r\n    function registerWorklist(bytes32 bundleId, address worklist) external {\r\n        address factory = factories[bundleId];\r\n        require(factory != address(0));\r\n        worklist2Bundle[worklist] = bundleId;\r\n        IFunct(factory).setWorklist(worklist);\r\n        IFunct(worklist).updateRuntimeRegistry(address(this));\r\n    }\r\n\r\n    function findRuntimePolicy(address pCase) public view returns(address) {\r\n        return instance2PolicyOp[pCase];\r\n    }\r\n\r\n    function relateProcessToPolicy(bytes32 bundleId, bytes32 _policy, bytes32 _taskRole) external {\r\n        taskRole[bundleId] = _taskRole;\r\n        policy[bundleId] = _policy;\r\n    }\r\n    \r\n    function registerAgreement(address agreementAddr, address accessControlAdr) public {\r\n        agreement2Policy[agreementAddr] = accessControlAdr;\r\n    }\r\n\r\n    function addChildBundleId(bytes32 parentBundleId, bytes32 processBundleId, uint nodeIndex) external {\r\n        parent2ChildrenBundleId[parentBundleId][nodeIndex] = processBundleId;\r\n    }\r\n\r\n    function newInstanceFor(uint nodeIndex, address parent) public returns(address) {\r\n        address procAddres = newBundleInstanceFor(parent2ChildrenBundleId[instance2Bundle[parent]][nodeIndex], parent);\r\n        if(instance2PolicyOp[parent] != address(0))\r\n            instance2PolicyOp[procAddres] = instance2PolicyOp[parent];  \r\n    }\r\n\r\n    function newBundleInstanceFor(bytes32 bundleId, address parent) public returns(address) {\r\n        address factory = factories[bundleId];\r\n        require(factory != address(0));\r\n        address processAddress = IFunct(factory).newInstance(parent, address(this));\r\n        instance2Bundle[processAddress] = bundleId;\r\n        instancesCE.push(processAddress);\r\n        IFunct(factory).startInstanceExecution(processAddress);\r\n        emit NewInstanceCreatedFor(parent, processAddress);\r\n        return processAddress;\r\n    }\r\n\r\n    function newRestrictedCInstanceFor(bytes32 bundleId, address parent, address accessCtrl, address rbPolicy, address trMap) public returns(address) {\r\n        address pCase = newBundleInstanceFor(bundleId, parent);  \r\n        if(accessCtrl != address(0)) {\r\n            instance2PolicyOp[pCase] = accessCtrl;\r\n            IFunct(accessCtrl).linkPolicyToAccessControl(pCase, address(this), rbPolicy, trMap);\r\n        }    \r\n        return pCase;\r\n    }\r\n\r\n    function newRestrictedIInstanceFor(address iFlowAdr, address interpreter, address accessCtrl, address rbPolicy, address trMap) public returns(address) { \r\n        address pCase = IFunct(interpreter).createInstance(iFlowAdr); \r\n        registerIData2IflowRelation(pCase, iFlowAdr, accessCtrl);\r\n        if(accessCtrl != address(0))       \r\n            IFunct(accessCtrl).linkPolicyToAccessControl(pCase, address(this), rbPolicy, trMap);\r\n        return pCase;\r\n    }\r\n\r\n    function hasFactory(uint nodeIndex, address parent) public view returns(bool) {\r\n        return factories[parent2ChildrenBundleId[instance2Bundle[parent]][nodeIndex]] != address(0);\r\n    }\r\n\r\n    function resumeInstanceFor(address processInstance, uint elementIndex, uint decission) public {\r\n        require(agreement2Policy[msg.sender] != address(0));\r\n        IFunct(processInstance).resumeInstance(elementIndex, 1 << decission);\r\n    }\r\n    \r\n    function allRegisteredModels() external view returns(bytes32[] memory) {\r\n        return repoIdsCE;\r\n    }\r\n    \r\n    function allRegisteredIFlows() external view returns(bytes32[] memory) {\r\n        return repoIdsIE;\r\n    }\r\n\r\n    function allInstances() external view returns(address[] memory) {\r\n        return instancesCE;\r\n    }\r\n    \r\n    function bindingPolicyFor(address procInstance) external view returns(bytes32) {\r\n        bytes32 pId = instance2Bundle[procInstance];\r\n        address pAddr = procInstance;\r\n        while(policy[pId].length != 0) {\r\n            pAddr = IFunct(pAddr).findParent();\r\n            if(pAddr == address(0))\r\n                break;\r\n            pId = instance2Bundle[pAddr];\r\n        }\r\n        return policy[pId];\r\n    }\r\n\r\n    function taskRoleMapFor(address procInstance) external view returns(bytes32) {\r\n        bytes32 pId = instance2Bundle[procInstance];\r\n        address pAddr = procInstance;\r\n        while(taskRole[pId].length != 0) {\r\n            pAddr = IFunct(pAddr).findParent();\r\n            if(pAddr == address(0))\r\n                break;\r\n            pId = instance2Bundle[pAddr];\r\n        }\r\n        return taskRole[pId];\r\n    }\r\n\r\n    function bindingPolicyFromId(bytes32 procId) external view returns(bytes32) {\r\n        return policy[procId];\r\n    }\r\n\r\n    function taskRoleMapFromId(bytes32 procId) external view returns(bytes32) {\r\n        return taskRole[procId];\r\n    }\r\n\r\n    function bundleFor(address processInstance) external view returns(bytes32) {\r\n        return instance2Bundle[processInstance];\r\n    }\r\n\r\n    function childrenFor(bytes32 parent, uint nodeInd) external view returns(bytes32) {\r\n        return parent2ChildrenBundleId[parent][nodeInd];\r\n    }\r\n\r\n    function worklistBundleFor(address worklist) external view returns(bytes32) {\r\n        return worklist2Bundle[worklist];\r\n    }\r\n}","address":"0x7f21dEeE8B2DaF5C517212024625a155C2E9F453"}

----------------------------------------------------
Ethereum contract created via ganache-cli

eth_accounts
eth_gasPrice
eth_sendTransaction

  Transaction: 0x4c7ecebcd735d70d6f50ee843f0f5a421b071b56003f14e1c0ed22ff1d1b3d3c
  Contract created: 0x7f21deee8b2daf5c517212024625a155c2e9f453
  Gas usage: 985032
  Block number: 1
  Block time: Tue Oct 11 2022 13:17:24 GMT+0530 (India Standard Time)

eth_getTransactionReceipt
eth_getCode

----------------------------------------------------
POST http://localhost:3000/interpreter

{"smartContractName":"BPMNInterpreter","gasCost":2887950,"transactionHash":"0x9e2ee2f731408c4c62d8f91b23716cd36c5d884c5bac473c7448719411e74716","contractAddress":"0x99711B1e18e1bD789ee674071dCd47e5674596dB"}

eth_accounts
eth_gasPrice
eth_sendTransaction

  Transaction: 0x9e2ee2f731408c4c62d8f91b23716cd36c5d884c5bac473c7448719411e74716
  Contract created: 0x99711b1e18e1bd789ee674071dcd47e5674596db
  Gas usage: 2887950
  Block number: 1
  Block time: Tue Oct 11 2022 23:45:24 GMT+0530 (India Standard Time)

eth_getTransactionReceipt
eth_getCode
----------------------------------------------------
POST http://localhost:3000/access-control

"0xc8c4542cb6d343472480990d284a75d9b2324cb5f249e93c9049ea825c3f9f4f"

eth_accounts
eth_gasPrice
eth_sendTransaction

  Transaction: 0xc8c4542cb6d343472480990d284a75d9b2324cb5f249e93c9049ea825c3f9f4f
  Contract created: 0x35f1f4cec74baf138a24732b9b4b518f463674ab
  Gas usage: 1240158
  Block number: 2
  Block time: Wed Oct 12 2022 00:39:20 GMT+0530 (India Standard Time)

eth_getTransactionReceipt
eth_getTransactionReceipt
eth_getCode

POST /access-control 202 1852.485 ms - 68
SUCCESS: BindingAccessControl deployed succesfully
   Transaction Hash: 0xc8c4542cb6d343472480990d284a75d9b2324cb5f249e93c9049ea825c3f9f4f
   Address: 0x35F1F4ceC74Baf138a24732b9B4B518f463674ab
   Cost: 1240158 gas
   Repository ID: 6345bf60ab41622f20cc3056
   
{"contractName":"BindingAccessControl","abi":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"taskIndex\",\"type\":\"uint256\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rActor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"findRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"getPolicyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"getTaskRoleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_taskRoleAdr\",\"type\":\"address\"}],\"name\":\"linkPolicyToAccessControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rNominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rNominee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nominator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rNominee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"nominateCaseCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rNominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rNominee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nominator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"roleState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rNominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rNominee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rEndorser\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"endorser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAccepted\",\"type\":\"bool\"}],\"name\":\"voteN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rNominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rNominee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rEndorser\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"endorser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAccepted\",\"type\":\"bool\"}],\"name\":\"voteR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bytecode":"6080604052600160065534801561001557600080fd5b50611513806100256000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806383bb92cc1161007157806383bb92cc146101f257806392115bf514610226578063a91e5a3014610270578063c17c8078146102ba578063c8e304d5146102f0578063e9e4072914610334576100a9565b8063237edb5b146100ae57806324ff8902146100ee578063510beeb21461012c5780635ce94e0d14610176578063606a43c4146101b8575b600080fd5b6100ec600480360360808110156100c457600080fd5b506001600160a01b03813581169160208101358216916040820135811691606001351661035a565b005b61011a6004803603604081101561010457600080fd5b50803590602001356001600160a01b03166103fa565b60408051918252519081900360200190f35b6101626004803603606081101561014257600080fd5b506001600160a01b0381358116916020810135916040909101351661042c565b604080519115158252519081900360200190f35b61019c6004803603602081101561018c57600080fd5b50356001600160a01b0316610563565b604080516001600160a01b039092168252519081900360200190f35b6100ec600480360360808110156101ce57600080fd5b508035906020810135906001600160a01b0360408201358116916060013516610581565b6100ec6004803603606081101561020857600080fd5b508035906001600160a01b0360208201358116916040013516610865565b61011a600480360360c081101561023c57600080fd5b508035906020810135906040810135906001600160a01b03606082013581169160808101359091169060a0013515156109cd565b61011a600480360360c081101561028657600080fd5b508035906020810135906040810135906001600160a01b03606082013581169160808101359091169060a001351515610bf6565b610162600480360360608110156102d057600080fd5b506001600160a01b03813581169160208101359091169060400135610e59565b6100ec600480360360a081101561030657600080fd5b508035906020810135906001600160a01b0360408201358116916060810135821691608090910135166110a0565b61019c6004803603602081101561034a57600080fd5b50356001600160a01b031661143a565b6002546001600160a01b031661038a57600280546001600160a01b0319166001600160a01b0385161790556103a4565b6002546001600160a01b038481169116146103a457600080fd5b6001600160a01b0393841660009081526020818152604080832080549588166001600160a01b03199687161790556001808352818420805495909816949095169390931790955560049094529092209190915550565b6001600160a01b0316600090815260056020908152604080832054835260078252808320938352929052206004015490565b6001600160a01b0381166000908152600560205260408120545b600081815260076020908152604080832087845290915290206004015460031461050357826001600160a01b031663b1325a146040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a357600080fd5b505afa1580156104b7573d6000803e3d6000fd5b505050506040513d60208110156104cd57600080fd5b505192506001600160a01b0383166104e457610503565b506001600160a01b038216600090815260056020526040902054610446565b6001600160a01b0385166000908152600360205260409020541580159061055a57506001600160a01b0385166000908152600360209081526040808320548484526007835281842088855290925290912060010154145b95945050505050565b6001600160a01b039081166000908152600160205260409020541690565b6001600160a01b0381166000908152600560205260409020546105a26114ae565b506000818152600760209081526040808320878452825291829020825160a08101845281548152600182015492810192909252600281015492820192909252600380830154606083015260049092015460808201819052909114801561063157506001600160a01b038416600090815260036020908152604080832054835260099091529020546001871b1615155b80156106c257506001600160a01b03808416600090815260208181526040918290205482516372ee059960e11b8152600481018b9052602481018a9052925193169263e5dc0b32926044808201939291829003018186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d60208110156106bf57600080fd5b50515b801561076a57506001600160a01b038084166000908152602081815260408083205485830151845260098352928190205481516302aea8f560e11b8152600481018c9052602481018b905260448101919091529051929093169263055d51ea9260648083019392829003018186803b15801561073d57600080fd5b505afa158015610751573d6000803e3d6000fd5b505050506040513d602081101561076757600080fd5b50515b61077357600080fd5b6001600160a01b038084166000908152602081815260409182902054825163ad5f056160e01b8152600481018b9052602481018a9052925193169263ad5f0561926044808201939291829003018186803b1580156107d057600080fd5b505afa1580156107e4573d6000803e3d6000fd5b505050506040513d60208110156107fa57600080fd5b505161083b57600082815260076020908152604080832088845282528083206004018390558382015183526009909152902080546001871b1916905561085d565b6000828152600760209081526040808320888452909152902060016004909101555b505050505050565b6001600160a01b038116600090815260046020526040902054600114801561090b57506001600160a01b038082166000908152602081815260409182902054825163a4139fb360e01b815260048101889052925193169263a4139fb3926024808201939291829003018186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d602081101561090857600080fd5b50515b61091457600080fd5b6001600160a01b0390811660008181526004602081815260408084208054600180820190925597909616845260038083528185208890556006805480890190915595855260058352818520869055815160a0810183528881528084018981528184018781526060830188815260808401858152998952600787528589208d8a528752858920935184559151838b0155516002830155519181019190915594519490920193909355938152600990915291909120911b9055565b6001600160a01b0382166000908152600560205260408120546109ee6114ae565b5060008181526007602090815260408083208a8452825291829020825160a0810184528154815260018083015493820193909352600282015493810193909352600381015460608401526004015460808301819052148015610a7957506001600160a01b038616600090815260036020908152604080832054835260099091529020546001881b1615155b610a8257600080fd5b6000806000876001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316635e7c94e58b8b8b866040015187606001518b6040518763ffffffff1660e01b81526004018087815260200186815260200185815260200184815260200183815260200182151515158152602001965050505050505060206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d6020811015610b5d57600080fd5b505160008481526007602090815260408083208d845290915290206004018190559050610b8f838a60018b1b88611458565b801580610b9c5750806003145b15610be95760008381526007602090815260408083208c84529091528120600381018290556002015580610be9576020808301516000908152600990915260409020805460018b1b191690555b9998505050505050505050565b6001600160a01b038216600090815260056020526040812054610c176114ae565b5060008181526007602090815260408083208a8452825291829020825160a08101845281548152600182015492810192909252600280820154938301939093526003810154606083015260040154608082018190529091148015610cd557506001600160a01b038616600090815260036020908152604080832054835260099091529020546001881b16151580610cd557508787148015610cd557506001600160a01b03861660009081526003602090815260409091205490820151145b610cde57600080fd5b6000806000876001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b031663d79873398b8b8b866040015187606001518b6040518763ffffffff1660e01b81526004018087815260200186815260200185815260200184815260200183815260200182151515158152602001965050505050505060206040518083038186803b158015610d8f57600080fd5b505afa158015610da3573d6000803e3d6000fd5b505050506040513d6020811015610db957600080fd5b505160008481526007602090815260408083208d845290915290206004018190559050610deb838a60018b1b88611458565b801580610df85750806003145b15610be95760008381526007602090815260408083208c845290915281206003808201839055600290910191909155811415610be9576020808301516000908152600990915260409020805460018b1b179055925050509695505050505050565b600254604080516384b9b07f60e01b81526001600160a01b0385811660048301529151600093849316916384b9b07f916024808301926020929190829003018186803b158015610ea857600080fd5b505afa158015610ebc573d6000803e3d6000fd5b505050506040513d6020811015610ed257600080fd5b50516001600160a01b038086166000908152600160209081526040808320548151637678fcdd60e01b8152600481018a905260248101879052915195965092949290931692637678fcdd9260448083019392829003018186803b158015610f3857600080fd5b505afa158015610f4c573d6000803e3d6000fd5b505050506040513d6020811015610f6257600080fd5b50516001600160a01b0386166000908152600560205260409020549091505b600081815260076020908152604080832085845290915290206004015460031461103e57856001600160a01b031663b1325a146040518163ffffffff1660e01b815260040160206040518083038186803b158015610fde57600080fd5b505afa158015610ff2573d6000803e3d6000fd5b505050506040513d602081101561100857600080fd5b505195506001600160a01b03861661101f5761103e565b506001600160a01b038516600090815260056020526040902054610f81565b6001600160a01b0387166000908152600360205260409020541580159061109557506001600160a01b0387166000908152600360209081526040808320548484526007835281842086855290925290912060010154145b979650505050505050565b6001600160a01b0380831660009081526003602081815260408084205486861685526005835281852054958916855292825280842054858552600783528185208a8652909252909220600401549092916001881b9115801561111057506000848152600960205260409020548216155b8015611140575060008181526009602052604090205460018a1b1615158061114057508015801561114057508789145b80156111d157506001600160a01b038086166000908152602081815260409182902054825163a036444160e01b8152600481018e9052602481018d9052925193169263a0364441926044808201939291829003018186803b1580156111a457600080fd5b505afa1580156111b8573d6000803e3d6000fd5b505050506040513d60208110156111ce57600080fd5b50515b801561127657506001600160a01b03808616600090815260208181526040808320548884526009835292819020548151633df1ed9360e01b8152600481018f9052602481018e9052604481019190915290519290931692633df1ed939260648083019392829003018186803b15801561124957600080fd5b505afa15801561125d573d6000803e3d6000fd5b505050506040513d602081101561127357600080fd5b50515b61127f57600080fd5b826112ad5760068054600181019091556001600160a01b038616600090815260056020526040902081905592505b836112e9576001600160a01b038086166000908152600460209081526040808320805460018101909155938a1683526003909152902081905593505b806112f15750825b6001600160a01b0380861660009081526020818152604080832054815163f1f456c960e01b8152600481018f9052602481018e905291519394169263f1f456c992604480840193919291829003018186803b15801561134f57600080fd5b505afa158015611363573d6000803e3d6000fd5b505050506040513d602081101561137957600080fd5b5051611386576003611389565b60025b60ff1690506040518060a001604052808381526020018681526020016000815260200160008152602001828152506007600086815260200190815260200160002060008b81526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040155905050806003141561142e5760008581526009602052604090208054841790555b50505050505050505050565b6001600160a01b039081166000908152602081905260409020541690565b801561148557600084815260076020908152604080832086845290915290206002018054831790556114a8565b600084815260076020908152604080832086845290915290206003018054831790555b50505050565b6040518060a001604052806000815260200160008152602001600081526020016000815260200160008152509056fea2646970667358221220535f2e559a045ca3cbde5911eb46e4fd171c7470a2718f29b3e4ccadc393f2bc64736f6c634300060a0033","solidityCode":"pragma solidity >= 0.4.25 < 0.7.0;\r\n\r\n// Function assertVote will return 0 -> UNBOUND, 1 -> NOMINATED, 2 -> RELEASING, 3 -> BOUND\r\nabstract contract BindingPolicy {\r\n    function isCaseCreator(uint roleIndex) public virtual pure returns(bool);\r\n    function canNominate (uint rNominator, uint rNominee) public virtual pure returns(bool);\r\n    function assertNConstraint (uint rNominator, uint rNominee, uint nomineeRoles) public virtual pure returns(bool);\r\n    function requireNEndorsement (uint rNominator, uint rNominee) public virtual pure returns(bool);\r\n    function assertNVote (uint rNominator, uint rNominee, uint rEndorser, uint endorsedBy, uint rejectedBy, bool isAccepted) public virtual pure returns(uint);\r\n    \r\n    function canRelease (uint rNominator, uint rNominee) public virtual pure returns(bool);\r\n    function assertRConstraint (uint rNominator, uint rNominee, uint nomineeRoles) public virtual pure returns(bool);\r\n    function requireREndorsement (uint rNominator, uint rNominee) public virtual pure returns(bool);\r\n    function assertRVote (uint rNominator, uint rNominee, uint rEndorser, uint endorsedBy, uint rejectedBy, bool isAccepted) public virtual pure returns(uint);\r\n    \r\n    function findRole(address actor, uint rActor, address pCase) public virtual view returns(bool);\r\n}\r\n\r\nabstract contract ControlFlow {\r\n    function findParent() public virtual view returns(address);\r\n    function getRoleFromTask(uint taskIndex, bytes32 processId) public virtual pure returns(uint);\r\n    function bundleFor(address pCase) external virtual view returns(bytes32);\r\n}\r\n\r\ncontract BindingAccessControl {\r\n    mapping(address => address) private policyAdr;\r\n    mapping(address => address) private taskRoleAdr;\r\n    address private registry;\r\n    \r\n    struct BindingInfo {\r\n        uint nominator;\r\n        uint nominee;\r\n        uint endorsedBy;\r\n        uint rejectedBy;\r\n        // 0- UNBOUND, 1- RELEASING, 2- NOMINATED, 3- BOUND\r\n        uint bindingState;\r\n    }\r\n    \r\n    mapping (address => uint) private actorIndex;\r\n    mapping (address => uint) private actorCount;\r\n    \r\n    mapping (address => uint) private caseIndex;\r\n    uint private caseCount = 1;\r\n    \r\n    // caseIndex => roleIndex => actorIndex\r\n    mapping (uint => mapping (uint => BindingInfo)) private roleBindingState;\r\n    \r\n    mapping (uint => mapping (uint => uint)) private taskRoleMap;\r\n    \r\n    // actorIndex => acceptedRoleIndexMask\r\n    mapping (uint => uint) private actorRoles;\r\n\r\n    function nominateCaseCreator (uint rNominee, address nominee, address pCase) public {\r\n        require(actorCount[pCase] == 1 && BindingPolicy(policyAdr[pCase]).isCaseCreator(rNominee));\r\n        \r\n        uint creatorIndex = actorIndex[nominee] = actorCount[pCase]++;\r\n        uint pCaseIndex = caseIndex[pCase] = caseCount++;\r\n        \r\n        roleBindingState[pCaseIndex][rNominee] = BindingInfo(creatorIndex, creatorIndex, 0, 0, 3);\r\n        actorRoles[creatorIndex] = uint(1) << rNominee; \r\n    }\r\n    \r\n    function nominate (uint rNominator, uint rNominee, address nominator, address nominee, address pCase) public {\r\n        // Verify that @processCase is a child in the process hierarchy where root is the process-case provided when nominated the process-creator.\r\n        // This verification can be done via the RuntimeRegistry in order to keep the consistency between control-flow, worklist and binding-control.\r\n        uint iNominee = actorIndex[nominee];\r\n        uint iCase = caseIndex[pCase];\r\n        uint nomineeMask = uint(1) << rNominee;\r\n        uint iNominator = actorIndex[nominator];\r\n        // no actor can be BOUND/NOMINATED in pCase, the noinee cannot hold the rNominee role\r\n        // nominator actor must be binded to a role unless self-nomination is allowed\r\n        // the role of the nominator is allowed to nominate in the binding policy.\r\n        // the requested nomination fulfill the conditions defined in the policy by the instructions IN / NOT IN\r\n        require(roleBindingState[iCase][rNominee].bindingState == 0 && actorRoles[iNominee] & nomineeMask == 0 &&\r\n                (actorRoles[iNominator] & (uint(1) << rNominator) != 0 || (iNominator == 0 && rNominator == rNominee)) &&\r\n                (BindingPolicy(policyAdr[pCase]).canNominate(rNominator, rNominee)) &&\r\n                (BindingPolicy(policyAdr[pCase]).assertNConstraint(rNominator, rNominee, actorRoles[iNominee])));\r\n        // At this point, all the conditions were fulfilled because otherwise an exception was thrown reverting the transaction. Thus the binding is allowed.\r\n        // Verifying that all the indexes (for actors and process-cases) were already assigned to an index.\r\n        if(iCase == 0)\r\n            iCase = caseIndex[pCase] = caseCount++;\r\n        if(iNominee == 0)\r\n            iNominee = actorIndex[nominee] = actorCount[pCase]++;\r\n        if(iNominator == 0)\r\n            iNominator = iNominee;\r\n        // Binding the role and updating the state as NOMINATED(2) or BOUND(3) depending on the nomination require endorsement or not.\r\n        uint state = BindingPolicy(policyAdr[pCase]).requireNEndorsement(rNominator, rNominee) ? 2 : 3;\r\n        roleBindingState[iCase][rNominee] = BindingInfo (iNominator, iNominee, 0, 0, state); \r\n        if(state == 3)\r\n            actorRoles[iNominee] |= nomineeMask;\r\n    }\r\n    \r\n    function voteN (uint rNominator, uint rNominee, uint rEndorser, address endorser, address pCase, bool isAccepted) public returns(uint) {\r\n        //require(runtimeRegistry == msg.sender);\r\n        uint iCase = caseIndex[pCase];\r\n        BindingInfo memory roleVState = roleBindingState[iCase][rNominee];\r\n        // A nomination to endorse must be in NOMINATED state\r\n        // The endorser must be nominated before (state BOUND) unless the endorser is the nominee accepting the nomination.\r\n        require(roleVState.bindingState == 2 && \r\n                (actorRoles[actorIndex[endorser]] & (uint(1) << rEndorser) != 0 || rEndorser == rNominee && roleVState.nominee == actorIndex[endorser]));\r\n        // This function is responsible to evaluate the endorsment. \r\n        // An exception reverting the transaction is thwown in case of any invalid operation (e.g wrong endorser). \r\n        // Thus, this function only returns if the endorsement is performed. \r\n        uint state = BindingPolicy(policyAdr[pCase]).assertNVote(rNominator, rNominee, rEndorser, roleVState.endorsedBy, roleVState.rejectedBy, isAccepted);\r\n        // The storage is only updated if the endorsment is valid and thus performed.\r\n        roleBindingState[iCase][rNominee].bindingState = state;\r\n        updateVoteMask(iCase, rNominee, uint(1) << rEndorser, isAccepted);\r\n        if (state == 0 || state == 3) {\r\n            roleBindingState[iCase][rNominee].endorsedBy = roleBindingState[iCase][rNominee].rejectedBy = 0;\r\n            if (state == 3) \r\n                actorRoles[roleVState.nominee] |= ((uint(1) << rNominee));\r\n        }\r\n        return state;\r\n    }\r\n    \r\n    function release (uint rNominator, uint rNominee, address nominator, address pCase) public {\r\n        //require(runtimeRegistry == msg.sender);\r\n        uint iCase = caseIndex[pCase];\r\n        BindingInfo memory roleRState = roleBindingState[iCase][rNominee];\r\n        // The endorser and the processCase address must be nominated before.\r\n        // Validating the rNomiator is allowed to release rNominee.\r\n        // Validating the release is not restricted by a binding constraint.\r\n        require(roleRState.bindingState == 3 && actorRoles[actorIndex[nominator]] & (uint(1) << rNominator) != 0 && \r\n                (BindingPolicy(policyAdr[pCase]).canRelease(rNominator, rNominee)) && \r\n                (BindingPolicy(policyAdr[pCase]).assertRConstraint(rNominator, rNominee, actorRoles[roleRState.nominee])));\r\n        // Unbinding the role and updating the state as UNBINDING or UNBINDED depending on the dismisses require endorsement or not.\r\n        if(!BindingPolicy(policyAdr[pCase]).requireREndorsement(rNominator, rNominee)) {\r\n            roleBindingState[iCase][rNominee].bindingState = 0;\r\n            actorRoles[roleRState.nominee] &= ~(uint(1) << rNominee);\r\n        }\r\n        else\r\n           roleBindingState[iCase][rNominee].bindingState = 1;\r\n    }\r\n    \r\n    function voteR (uint rNominator, uint rNominee, uint rEndorser, address endorser, address pCase, bool isAccepted) public returns(uint) {\r\n        // require(runtimeRegistry == msg.sender);\r\n        uint iCase = caseIndex[pCase];\r\n        BindingInfo memory roleVRState = roleBindingState[iCase][rNominee];\r\n        // A release to vote must be in RELEASING state\r\n        // The endorsed involved in the vote and the processCase address must be nominated before.\r\n        require(roleVRState.bindingState == 1 && actorRoles[actorIndex[endorser]] & (uint(1) << rEndorser) != 0);\r\n        // This function is responsible to evaluate the endorsment.\r\n        // An exception reverting the transaction is thwown in case of any invalid operation (e.g wrong endorser).\r\n        // Thus, that function only returns if the endorsement can be performed.\r\n        uint state = BindingPolicy(policyAdr[pCase]).assertRVote(rNominator, rNominee, rEndorser, roleVRState.endorsedBy, roleVRState.rejectedBy, isAccepted);\r\n        roleBindingState[iCase][rNominee].bindingState = state;\r\n        updateVoteMask(iCase, rNominee, uint(1) << rEndorser, isAccepted);\r\n        if (state == 0 || state == 3) {\r\n            roleBindingState[iCase][rNominee].endorsedBy = roleBindingState[iCase][rNominee].rejectedBy = 0;\r\n            if (state == 0)\r\n                actorRoles[roleVRState.nominee] &= ~(uint(1) << rNominee);\r\n        }\r\n        return state;\r\n    }\r\n\r\n    function getPolicyAddress(address pCase) public view returns(address) {\r\n        return policyAdr[pCase];\r\n    }\r\n\r\n    function getTaskRoleAddress(address pCase) public view returns(address) {\r\n        return taskRoleAdr[pCase];\r\n    }\r\n\r\n    function linkPolicyToAccessControl(address pCase, address _registry, address _policy, address _taskRoleAdr) public {\r\n        if(registry == address(0))\r\n            registry = _registry;\r\n        else require(registry == _registry);\r\n        policyAdr[pCase] = _policy;\r\n        taskRoleAdr[pCase] = _taskRoleAdr;\r\n        actorCount[pCase] = 1;\r\n    }\r\n\r\n    function roleState (uint role, address pCase) public view returns(uint) {\r\n        return roleBindingState[caseIndex[pCase]][role].bindingState;\r\n    }\r\n    \r\n    function findRole(address actor, uint rActor, address pCase) public view returns(bool) {\r\n        uint iCase = caseIndex[pCase];\r\n        while(roleBindingState[iCase][rActor].bindingState != 3) {\r\n            pCase = ControlFlow(pCase).findParent();\r\n            if(pCase == address(0))\r\n                break;\r\n            iCase = caseIndex[pCase];\r\n        }\r\n        return actorIndex[actor] > 0 && roleBindingState[iCase][rActor].nominee == actorIndex[actor];\r\n    }\r\n        \r\n    function canPerform(address actor, address pCase, uint taskIndex) public view returns(bool) {\r\n        bytes32 pId = ControlFlow(registry).bundleFor(pCase);\r\n        uint tRole = ControlFlow(taskRoleAdr[pCase]).getRoleFromTask(taskIndex, pId);\r\n        uint iCase = caseIndex[pCase];\r\n        while(roleBindingState[iCase][tRole].bindingState != 3) {\r\n            pCase = ControlFlow(pCase).findParent();\r\n            if(pCase == address(0))\r\n                break;\r\n            iCase = caseIndex[pCase];\r\n        }\r\n        return actorIndex[actor] > 0 && roleBindingState[iCase][tRole].nominee == actorIndex[actor];\r\n    }\r\n    \r\n    function updateVoteMask(uint iCase, uint rNominee, uint endorserMask, bool isAccepted) private {\r\n        if (isAccepted)\r\n            roleBindingState[iCase][rNominee].endorsedBy |= endorserMask;\r\n        else\r\n            roleBindingState[iCase][rNominee].rejectedBy |= endorserMask;\r\n    }\r\n}","address":"0x35F1F4ceC74Baf138a24732b9B4B518f463674ab"}
----------------------------------------------------



----------------------------------------------------