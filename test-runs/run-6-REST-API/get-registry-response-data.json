{"contractName":"Runtime Registry","abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"processAddress\",\"type\":\"address\"}],\"name\":\"NewInstanceCreatedFor\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentBundleId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"processBundleId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"}],\"name\":\"addChildBundleId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allInstances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allRegisteredIFlows\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allRegisteredModels\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"procInstance\",\"type\":\"address\"}],\"name\":\"bindingPolicyFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"procId\",\"type\":\"bytes32\"}],\"name\":\"bindingPolicyFromId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"processInstance\",\"type\":\"address\"}],\"name\":\"bundleFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nodeInd\",\"type\":\"uint256\"}],\"name\":\"childrenFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pCase\",\"type\":\"address\"}],\"name\":\"findRuntimePolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"}],\"name\":\"getBundleIdFromIFlow\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iDataAddr\",\"type\":\"address\"}],\"name\":\"getIFlowFromIData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"hasFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"newBundleInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"newInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessCtrl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trMap\",\"type\":\"address\"}],\"name\":\"newRestrictedCInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iFlowAdr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessCtrl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trMap\",\"type\":\"address\"}],\"name\":\"newRestrictedIInstanceFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessControlAdr\",\"type\":\"address\"}],\"name\":\"registerAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"registerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iDataAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"policyOpAddr\",\"type\":\"address\"}],\"name\":\"registerIData2IflowRelation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"iFlowAddr\",\"type\":\"address\"}],\"name\":\"registerIFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"worklist\",\"type\":\"address\"}],\"name\":\"registerWorklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundleId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_policy\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_taskRole\",\"type\":\"bytes32\"}],\"name\":\"relateProcessToPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"processInstance\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"elementIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decission\",\"type\":\"uint256\"}],\"name\":\"resumeInstanceFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"procInstance\",\"type\":\"address\"}],\"name\":\"taskRoleMapFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"procId\",\"type\":\"bytes32\"}],\"name\":\"taskRoleMapFromId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"worklist\",\"type\":\"address\"}],\"name\":\"worklistBundleFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bytecode":"","solidityCode":"pragma solidity >= 0.4.25 < 0.7.0;\r\n\r\nabstract contract IFunct {\r\n    // WorkList functions\r\n    function updateRuntimeRegistry(address _runtimeRegistry) public virtual;\r\n    // Factory Functions\r\n    function setWorklist(address _worklist) public virtual;\r\n    function startInstanceExecution(address processAddress) public virtual;\r\n    function newInstance(address parent, address globalFactory) public virtual returns(address);\r\n    function findParent() public virtual view returns(address);\r\n    function resumeInstance(uint elementIndex, uint decission) public virtual;\r\n    function registerAgreement(address agreementAddr, address accessControlAdr) public virtual;\r\n    function linkPolicyToAccessControl(address pCase, address _registry, address _policy, address _taskRoleAdr) public virtual;   \r\n    function createInstance(address cFlow) public virtual returns(address);\r\n}\r\n\r\ncontract RuntimeRegistry {\r\n\r\n    mapping (bytes32 => mapping (uint => bytes32)) private parent2ChildrenBundleId;\r\n    mapping (bytes32 => address) private factories;\r\n    mapping (address => bytes32) private iFlow;\r\n    \r\n    mapping (bytes32 => bytes32) private policy;\r\n    mapping (bytes32 => bytes32) private taskRole;\r\n\r\n    mapping (address => bytes32) private instance2Bundle;\r\n    mapping (address => address) private iData2IFlow;\r\n    mapping (address => address) private instance2PolicyOp;\r\n    mapping (address => address) private agreement2Policy;\r\n    \r\n    address[] private instancesCE;\r\n    \r\n    bytes32[] private repoIdsCE;\r\n    bytes32[] private repoIdsIE;\r\n    \r\n\r\n    mapping (address => bytes32) private worklist2Bundle;\r\n\r\n    event NewInstanceCreatedFor(address parent, address processAddress);\r\n    \r\n    function registerIFlow(bytes32 bundleId, address iFlowAddr) external {\r\n        iFlow[iFlowAddr] = bundleId;\r\n        repoIdsIE.push(bundleId);\r\n    }\r\n\r\n    function registerIData2IflowRelation(address iDataAddr, address iFlowAddr, address policyOpAddr) public {\r\n        iData2IFlow[iDataAddr] = iFlowAddr;\r\n        instance2PolicyOp[iDataAddr] = policyOpAddr;\r\n    }\r\n\r\n    function getIFlowFromIData(address iDataAddr) external view returns(address) {\r\n        return iData2IFlow[iDataAddr];\r\n    }\r\n\r\n    function getBundleIdFromIFlow (address iFlowAddr) external view returns(bytes32) {\r\n        return iFlow[iFlowAddr];\r\n    }\r\n    \r\n    function registerFactory(bytes32 bundleId, address factory) external {\r\n        factories[bundleId] = factory;\r\n        repoIdsCE.push(bundleId);\r\n    }\r\n\r\n    function registerWorklist(bytes32 bundleId, address worklist) external {\r\n        address factory = factories[bundleId];\r\n        require(factory != address(0));\r\n        worklist2Bundle[worklist] = bundleId;\r\n        IFunct(factory).setWorklist(worklist);\r\n        IFunct(worklist).updateRuntimeRegistry(address(this));\r\n    }\r\n\r\n    function findRuntimePolicy(address pCase) public view returns(address) {\r\n        return instance2PolicyOp[pCase];\r\n    }\r\n\r\n    function relateProcessToPolicy(bytes32 bundleId, bytes32 _policy, bytes32 _taskRole) external {\r\n        taskRole[bundleId] = _taskRole;\r\n        policy[bundleId] = _policy;\r\n    }\r\n    \r\n    function registerAgreement(address agreementAddr, address accessControlAdr) public {\r\n        agreement2Policy[agreementAddr] = accessControlAdr;\r\n    }\r\n\r\n    function addChildBundleId(bytes32 parentBundleId, bytes32 processBundleId, uint nodeIndex) external {\r\n        parent2ChildrenBundleId[parentBundleId][nodeIndex] = processBundleId;\r\n    }\r\n\r\n    function newInstanceFor(uint nodeIndex, address parent) public returns(address) {\r\n        address procAddres = newBundleInstanceFor(parent2ChildrenBundleId[instance2Bundle[parent]][nodeIndex], parent);\r\n        if(instance2PolicyOp[parent] != address(0))\r\n            instance2PolicyOp[procAddres] = instance2PolicyOp[parent];  \r\n    }\r\n\r\n    function newBundleInstanceFor(bytes32 bundleId, address parent) public returns(address) {\r\n        address factory = factories[bundleId];\r\n        require(factory != address(0));\r\n        address processAddress = IFunct(factory).newInstance(parent, address(this));\r\n        instance2Bundle[processAddress] = bundleId;\r\n        instancesCE.push(processAddress);\r\n        IFunct(factory).startInstanceExecution(processAddress);\r\n        emit NewInstanceCreatedFor(parent, processAddress);\r\n        return processAddress;\r\n    }\r\n\r\n    function newRestrictedCInstanceFor(bytes32 bundleId, address parent, address accessCtrl, address rbPolicy, address trMap) public returns(address) {\r\n        address pCase = newBundleInstanceFor(bundleId, parent);  \r\n        if(accessCtrl != address(0)) {\r\n            instance2PolicyOp[pCase] = accessCtrl;\r\n            IFunct(accessCtrl).linkPolicyToAccessControl(pCase, address(this), rbPolicy, trMap);\r\n        }    \r\n        return pCase;\r\n    }\r\n\r\n    function newRestrictedIInstanceFor(address iFlowAdr, address interpreter, address accessCtrl, address rbPolicy, address trMap) public returns(address) { \r\n        address pCase = IFunct(interpreter).createInstance(iFlowAdr); \r\n        registerIData2IflowRelation(pCase, iFlowAdr, accessCtrl);\r\n        if(accessCtrl != address(0))       \r\n            IFunct(accessCtrl).linkPolicyToAccessControl(pCase, address(this), rbPolicy, trMap);\r\n        return pCase;\r\n    }\r\n\r\n    function hasFactory(uint nodeIndex, address parent) public view returns(bool) {\r\n        return factories[parent2ChildrenBundleId[instance2Bundle[parent]][nodeIndex]] != address(0);\r\n    }\r\n\r\n    function resumeInstanceFor(address processInstance, uint elementIndex, uint decission) public {\r\n        require(agreement2Policy[msg.sender] != address(0));\r\n        IFunct(processInstance).resumeInstance(elementIndex, 1 << decission);\r\n    }\r\n    \r\n    function allRegisteredModels() external view returns(bytes32[] memory) {\r\n        return repoIdsCE;\r\n    }\r\n    \r\n    function allRegisteredIFlows() external view returns(bytes32[] memory) {\r\n        return repoIdsIE;\r\n    }\r\n\r\n    function allInstances() external view returns(address[] memory) {\r\n        return instancesCE;\r\n    }\r\n    \r\n    function bindingPolicyFor(address procInstance) external view returns(bytes32) {\r\n        bytes32 pId = instance2Bundle[procInstance];\r\n        address pAddr = procInstance;\r\n        while(policy[pId].length != 0) {\r\n            pAddr = IFunct(pAddr).findParent();\r\n            if(pAddr == address(0))\r\n                break;\r\n            pId = instance2Bundle[pAddr];\r\n        }\r\n        return policy[pId];\r\n    }\r\n\r\n    function taskRoleMapFor(address procInstance) external view returns(bytes32) {\r\n        bytes32 pId = instance2Bundle[procInstance];\r\n        address pAddr = procInstance;\r\n        while(taskRole[pId].length != 0) {\r\n            pAddr = IFunct(pAddr).findParent();\r\n            if(pAddr == address(0))\r\n                break;\r\n            pId = instance2Bundle[pAddr];\r\n        }\r\n        return taskRole[pId];\r\n    }\r\n\r\n    function bindingPolicyFromId(bytes32 procId) external view returns(bytes32) {\r\n        return policy[procId];\r\n    }\r\n\r\n    function taskRoleMapFromId(bytes32 procId) external view returns(bytes32) {\r\n        return taskRole[procId];\r\n    }\r\n\r\n    function bundleFor(address processInstance) external view returns(bytes32) {\r\n        return instance2Bundle[processInstance];\r\n    }\r\n\r\n    function childrenFor(bytes32 parent, uint nodeInd) external view returns(bytes32) {\r\n        return parent2ChildrenBundleId[parent][nodeInd];\r\n    }\r\n\r\n    function worklistBundleFor(address worklist) external view returns(bytes32) {\r\n        return worklist2Bundle[worklist];\r\n    }\r\n}","address":"0xD804424D7b0f265A2CE590A73b1c909757D68c10"}